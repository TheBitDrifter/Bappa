/*
Package tteokbokki provides a 2D physics engine for games and simulations built for the Bappa framework.



Core Concepts:

  - Physics Systems: TransformSystem and IntegrationSystem handle the core physics simulation
  - Collision Detection: Support for polygon, AAB, and continuous collision detection
  - Force Application: Apply gravity, friction, impulses, and custom forces
  - Resolution: Handle collisions with realistic physical responses

Basic Usage:

	// Set up player and block positions and shapes
	playerPos := spatial.NewPosition(100, 95)
	blockPos := spatial.NewPosition(100, 150)
	playerShape := spatial.NewRectangle(50, 50)
	blockShape := spatial.NewRectangle(200, 20)
	
	// Set up dynamics (player is dynamic, block is static)
	playerDyn := motion.NewDynamics(1.0)
	playerDyn.Vel = vector.Two{Y: 50.0}
	playerDyn.Elasticity = 0.5
	
	blockDyn := motion.NewDynamics(0.0) // Static object
	
	// Check for collision
	if ok, collision := spatial.Detector.Check(
		playerShape, blockShape, playerPos.Two, blockPos.Two,
	); ok {
		// Resolve collision with physics
		motion.Resolver.Resolve(
			&playerPos.Two, 
			&blockPos.Two, 
			&playerDyn, 
			&blockDyn, 
			collision,
		)
	}

The package is organized into logical subpackages:

  - coresystems: Core physics systems for integration and transformation
  - motion: Force handling, integration, and physics-based collision resolution
  - spatial: Collision detection, continuous detection, and non-physics resolution

tteokbokki aims to provide realistic physics while maintaining high performance for games and simulations.
*/
package tteokbokki
